package startup

import (
	"os"
	"strings"
	sambaModels "sylve/internal/db/models/samba"
	"sylve/pkg/system"
	"sylve/pkg/utils"
)

func (s *Service) InitSamba() error {
	const marker = "# === This file is automatically generated by Sylve, don't edit! ==="
	cfgPath := "/usr/local/etc/smb4.conf"
	backupPath := "/usr/local/etc/smb4.conf.pre-sylve"

	data, err := os.ReadFile(cfgPath)
	if err != nil && !os.IsNotExist(err) {
		return err
	}

	if !strings.Contains(string(data), marker) {
		exists, err := utils.FileExists(backupPath)
		if err != nil {
			return err
		}
		if !exists {
			if err := utils.CopyFile(cfgPath, backupPath); err != nil {
				return err
			}
		}
	}

	var count int64
	if err := s.DB.Model(&sambaModels.SambaSettings{}).Count(&count).Error; err != nil {
		return err
	}
	if count == 0 {
		defaultSettings := sambaModels.SambaSettings{
			UnixCharset: "UTF-8",
			Workgroup:   "WORKGROUP",
		}
		if err := s.DB.Create(&defaultSettings).Error; err != nil {
			return err
		}
	}

	if err := s.Samba.WriteConfig(false); err != nil {
		return err
	}

	return system.ServiceAction("samba_server", "restart")
}
